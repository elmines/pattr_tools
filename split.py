import argparse
import os
import sys

def existing_file(path):
   path = os.path.abspath(path)
   if not os.path.exists(path):
      raise ValueError("%s does not exist" % path)
   elif not os.path.isfile(path):
      raise ValueError("%s is not a file" % path)
   return path

def create_parser():
    parser = argparse.ArgumentParser(description="Generate two separate files from pattr.*.tsv files generated by WMT pattr-parallel.sh script")

    parser.add_argument("--input", "-i", required=True, nargs=1, metavar="<path>", type=existing_file, help="Path to .tsv file")
    parser.add_argument("--output", "-o", required=True, nargs=2, metavar=("<source_corp>", "<dest_corp"), help="Paths to produced corpora")

    return parser

def main(in_file, out_files):
    with open(in_file, "r", encoding="utf-8") as r:
        pairs = r.readlines()

    source_lines = []
    dest_lines = []

    i = 1
    for pair in map( lambda pair: tuple(pair.split("\t")), pairs ):
        if len(pair) == 2:
            source_lines.append( pair[0] )
            dest_lines.append( pair[1].strip() )
        else:
            sys.stderr.write("Line %d has %d tab-separated values, skipping . . .\n" % (i, len(pair)) )
        i += 1

    with open(out_files[0], "w", encoding="utf-8") as w:
        w.writelines( "\n".join(source_lines) )
    with open(out_files[1], "w", encoding="utf-8") as w:
        w.writelines( "\n".join(dest_lines) )



if __name__ == "__main__":
    parser = create_parser()
    args = parser.parse_args()

    main(args.input[0], args.output)
